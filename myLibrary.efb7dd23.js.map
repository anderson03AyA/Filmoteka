{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,aAGA,MAAMC,EAAaC,SAASC,eAAe,uBACrCC,EAAmBF,SAASC,eAAe,oBAC3CE,EAAUH,SAASI,cAAc,qBACvC,IAAIC,EAAc,EAClBN,EAAWO,iBAAiB,SAC5B,WACE,MAAMC,EAAoBC,KAAKC,MAAMC,aAAaC,QAAQ,gBAG1D,MAAMC,EAAgBL,EAAkBM,KAAIC,GACnCC,MACL,sCAAsCD,aAAmBjB,EAAAmB,uBACzDC,MAAKC,GAAYA,EAASC,WAQ9B,SAASC,EAAYC,GACnB,IAAIC,EAAa,GACjBC,QAAQC,IAAIZ,GACTK,MAAKQ,IAEJ,MAAMC,EAAsBnB,EAAkBoB,OACxCC,GAAK,EAAAC,EAAAC,eAAcT,EAXX,CAAAK,GACXA,GAAuB,GAAKK,KAAKC,KAAKN,EAAsB,IAAM,EAU/BO,CAAYP,IAClDvB,EAAQ+B,UAAYN,EAGpB,MACMO,EACY,IAAhBd,EAAoB,EAFL,IAEUA,EAAc,GAAgB,EACnDe,EAAWL,KAAKM,IAHL,GAGShB,EAAwBI,EAAWE,QAE7D,IAAK,IAAIW,EAAIH,EAAYG,EAAIF,EAAUE,IAAK,CAC1C,MAAMC,EAAOd,EAAWa,GAElBE,EAAc,GADC,oCACqBD,EAAKE,aACzCC,EAAaH,EAAKI,OAAO9B,KAAI+B,GAASA,EAAMC,OAAMC,KAAK,OACvDC,EAAY,4FAGKR,EAAKS,8EACUR,WAAqBD,EAAKU,iKAGxCV,EAAKU,6EAG3BP,OAAgBH,EAAKW,6FAMvB5B,GAAcyB,C,CAGhB7C,EAAiBgC,UAAYZ,CAAU,IAExC6B,OAAMC,GAASC,QAAQD,MAAMA,I,CA3ClChC,EAAY,GA0DZjB,EAAQG,iBAAiB,SAZzB,SAAyBgD,GACvB,GAA6B,OAAzBA,EAAMC,OAAOC,QAAkB,CACjC,MAAMC,EAAeH,EAAMC,OAAOG,UAC5BC,EAAkBC,SAASH,GACZ,QAAjBA,IAEFpD,EAAcsD,EACdL,EAAMO,kBACNzC,EAAYf,G","sources":["src/watched.js"],"sourcesContent":["import { API_KEY } from './config';\nimport { generatePages } from './pagination';\n\nconst watchedBtn = document.getElementById('watched-movies--btn');\nconst watchedContainer = document.getElementById('movies-container');\nconst ulPages = document.querySelector('.pagination__page');\nlet currentPage = 1;\nwatchedBtn.addEventListener('click', renderWatchedMovies);\nfunction renderWatchedMovies() {\n  const watchedMoviesList = JSON.parse(localStorage.getItem('watchedList'));\n  let moviesHTML = '';\n\n  const fetchPromises = watchedMoviesList.map(movieID => {\n    return fetch(\n      `https://api.themoviedb.org/3/movie/${movieID}?api_key=${API_KEY}&language=en`\n    ).then(response => response.json());\n  });\n\n  const total_pages = watchedMoviesLength => {\n    return watchedMoviesLength >= 20 ? Math.ceil(watchedMoviesLength / 20) : 1;\n  };\n  fetchMovies(1);\n\n  function fetchMovies(currentPage) {\n    let moviesHTML = '';\n    Promise.all(fetchPromises)\n      .then(moviesData => {\n        //get all for pagination---------------------\n        const watchedMoviesLength = watchedMoviesList.length;\n        const li = generatePages(currentPage, total_pages(watchedMoviesLength));\n        ulPages.innerHTML = li;\n        //------------------------------------------------\n\n        const pageSize = 20; // Tamaño de cada página\n        const startIndex =\n          currentPage === 1 ? 1 : (currentPage - 1) * pageSize + 1;\n        const endIndex = Math.min(currentPage * pageSize, moviesData.length);\n\n        for (let i = startIndex; i < endIndex; i++) {\n          const data = moviesData[i];\n          const baseImageUrl = 'https://image.tmdb.org/t/p/';\n          const moviePoster = `${baseImageUrl}w500${data.posterPath}`;\n          const genreNames = data.genres.map(genre => genre.name).join(' | ');\n          const movieHTML = `\n    <div class=\"photo-card\">\n      <div class=\"info\">\n        <a onclick=\"openModal('${data.id}')\" class=\"info__poster\">\n          <img class=\"info__poster--img\" src=\"${moviePoster}\" alt=\"${data.title}\" loading=\"lazy\" width=\"100px\" height=\"100px\" id=\"info__poster--img\" />\n        </a>\n        <h3 class=\"info__title\">\n          <strong class=\"title\">${data.title}</strong>\n        </h3>\n        <p class=\"info__genre\">\n          ${genreNames} | ${data.releaseYear}\n        </p>\n        <p class=\"info-item\"></p>\n      </div>\n    </div>\n  `;\n          moviesHTML += movieHTML;\n        }\n\n        watchedContainer.innerHTML = moviesHTML;\n      })\n      .catch(error => console.error(error));\n  }\n\n  function handlePageClick(event) {\n    if (event.target.tagName === 'LI') {\n      const clickedValue = event.target.innerText;\n      const clickedValueInt = parseInt(clickedValue);\n      if (clickedValue === '...') {\n      } else {\n        currentPage = clickedValueInt;\n        event.stopPropagation();\n        fetchMovies(currentPage);\n      }\n    }\n  }\n  ulPages.addEventListener('click', handlePageClick); // Agregar el evento de clic actualizado\n}"],"names":["$4ukh0","parcelRequire","$eba37ac3deda7c3c$var$watchedBtn","document","getElementById","$eba37ac3deda7c3c$var$watchedContainer","$eba37ac3deda7c3c$var$ulPages","querySelector","$eba37ac3deda7c3c$var$currentPage","addEventListener","watchedMoviesList","JSON","parse","localStorage","getItem","fetchPromises","map","movieID","fetch","API_KEY","then","response","json","fetchMovies","currentPage1","moviesHTML","Promise","all","moviesData","watchedMoviesLength","length","li","$edlQ8","generatePages","Math","ceil","total_pages","innerHTML","startIndex","endIndex","min","i","data","moviePoster","posterPath","genreNames","genres","genre","name","join","movieHTML","id","title","releaseYear","catch","error","console","event","target","tagName","clickedValue","innerText","clickedValueInt","parseInt","stopPropagation"],"version":3,"file":"myLibrary.efb7dd23.js.map"}