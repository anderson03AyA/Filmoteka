{"mappings":"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","sources":["src/genres.js","src/index.js"],"sourcesContent":["export const getGenres = async () => {\nconst API_KEY = '9aaec7b70164094369485674dba76f62';\n\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5YWFlYzdiNzAxNjQwOTQzNjk0ODU2NzRkYmE3NmY2MiIsInN1YiI6IjY0NTlhOWEyNzdkMjNiMDEzNjVkZDJlYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.KhcKUdwkddD7iZWM02lRSUXeaIlmMwnz5XvQav89l20',\n    },\n  };\n\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/genre/movie/list?language=en&api_key=${API_KEY}`,\n      options\n    );\n\n      const data = await response.json();\n    return data;\n  } catch (err) {\n    console.error(err);\n  }\n};\n","import { getGenres } from './genres';\n\nconst ulPages = document.querySelector('.ul-pages');\nconst searchInput = document.querySelector('.search');\nlet id = searchInput.value;\nconst send = document.querySelector('.send');\nconst div = document.querySelector('.movies-container');\n\nconst API_KEY = '9aaec7b70164094369485674dba76f62';\nlet API_URL = '';\n\nconst CATEGORIES = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  genre: '/genre/movie/list',\n  basic: '&language=en-US&include_adult=false',\n};\n\nconst baseImageUrl = 'https://image.tmdb.org/t/p/';\n\nlet currentPage = 1;\nlet totalPages = 1;\nconst resultsPerPage = 20;\nlet resultsGenre = [];\n\nconst listGenres = getGenres();\nlistGenres.then(results => {\n  resultsGenre = results.genres;\n  console.log(resultsGenre);\n});\n\nasync function getDate(page) {\n  try {\n    const response = await fetch(`${API_URL} &page=${page}`);\n    const data = await response.json();\n\n    console.log(data);\n\n    // Verificar si se encontraron resultados de búsqueda\n    if (data.results && data.results.length > 0) {\n      // Obtener los resultados de la página actual\n      const movies = data.results;\n      let indice = 0;\n      totalPages = data.total_pages;\n      let li = ``;\n      //pages style\n      if (totalPages < 10) {\n        for (let i = 0; i < totalPages; i++) {\n          li += `<li> ${i + 1}</li>`;\n        }\n      } else {\n        if (currentPage >= 4) {\n          //page start\n          li += `<li>1</li>`;\n          li += `<li>...</li>`;\n          //2 antes del page\n          li += `<li>${currentPage - 2}</li>`;\n          li += `<li>${currentPage - 1}</li>`;\n          //page current\n          li += `<li  class=\"currentPage\">${currentPage}</li>`;\n          //next2 page\n          li += `<li>${currentPage + 1}</li>`;\n          li += `<li>${currentPage + 2}</li>`;\n          li += `<li>...</li>`;\n          //page end\n          li += `<li>${totalPages}</li>`;\n        }\n        else if (currentPage == 3) {\n          \n          li += `<li>${currentPage - 2}</li>`;\n          li += `<li>${currentPage - 1}</li>`;\n          for (let i = currentPage; i < currentPage + 5; i++) {\n            if (i === currentPage) {\n              li += `<li class=\"currentPage\">${i}</li>`;\n            } else {\n              li += `<li>${i}</li>`;\n            }\n          }\n          li += `<li>...</li>`;\n          //page end\n          li += `<li>${totalPages}</li>`;\n        }\n        else if (currentPage == 2) {\n  \n           li += `<li>${currentPage - 1}</li>`;\n          for (let i = currentPage; i < currentPage + 6; i++) {\n             if (i === currentPage) {\n               li += `<li class=\"currentPage\">${i}</li>`;\n             } else {\n               li += `<li>${i}</li>`;\n             }\n          }\n            li += `<li>...</li>`;\n            //page end\n            li += `<li>${totalPages}</li>`;\n        }\n        else if (currentPage == 1) {\n          for (let i = currentPage; i < currentPage + 7; i++){\n             if (i === currentPage) {\n               li += `<li class=\"currentPage\">${i}</li>`;\n             } else {\n               li += `<li>${i}</li>`;\n             }\n          }\n           li += `<li>...</li>`;\n           //page end\n           li += `<li>${totalPages}</li>`;\n        }\n        \n      }\n      ulPages.innerHTML = li;\n\n      const movieCards = movies.map(movie => {\n        const idGenres = data.results[indice].genre_ids;\n\n        let result = resultsGenre.filter(filtro =>\n          idGenres.includes(filtro.id)\n        );\n        console.log(result);\n\n        const title = movie.title;\n        const releaseYear = movie.release_date;\n        const moviePoster = `${baseImageUrl}w500${movie.poster_path}`;\n\n        indice++;\n        let resultGenre = result.map(genre => genre.name);\n        return `<div class=\"photo-card\">\n          <div class=\"info\">\n            <a href=\"${moviePoster}\" class=\"info__poster\">\n              <img class=\"info__poster--img\" src=\"${moviePoster}\" alt=\"\" loading=\"lazy\" width=\"100px\" height=\"100px\" />\n            </a>\n              <h3 class=\"info__title\">\n              <strong class=\"title\">${title}</strong>\n            </h3>\n            <p class=\"info__genre\">\n              ${resultGenre}\n               |\n               ${releaseYear}\n            </p>\n            <p class=\"info-item\">\n             \n            </p>\n          \n          </div>\n        </div>`;\n      });\n\n      div.innerHTML = movieCards.join('');\n\n      totalPages = data.total_pages;\n    } else {\n      // No se encontraron resultados de búsqueda\n      console.log('No se encontraron resultados de búsqueda.');\n    }\n  } catch (error) {\n    console.log('Ha ocurrido un error:', error);\n  }\n}\n\nfunction updatePagination() {\n  // Actualizar estado de la paginación\n  document.getElementById('current-page').textContent = currentPage;\n  document.getElementById('total-pages').textContent = totalPages;\n}\n\nsend.addEventListener('click', async e => {\n  e.preventDefault();\n  if (searchInput.value === '') {\n  } else {\n    id = searchInput.value;\n    API_URL = `https://api.themoviedb.org/3${CATEGORIES.querySearch}?api_key=${API_KEY}&query=${id}${CATEGORIES.basic}`;\n    currentPage = 1;\n    await getDate(currentPage);\n    updatePagination();\n  }\n});\n\ndocument\n  .getElementById('pagination__prev-page')\n  .addEventListener('click', async () => {\n    if (currentPage > 1) {\n      currentPage--;\n      await getDate(currentPage);\n      updatePagination();\n    }\n  });\ndocument\n  .getElementById('pagination__next-page')\n  .addEventListener('click', async () => {\n    if (currentPage < totalPages) {\n      currentPage++;\n      await getDate(currentPage);\n      updatePagination();\n    }\n  });\n"],"names":["$1f0dc3b9307be026$var$ulPages","document","querySelector","$1f0dc3b9307be026$var$searchInput","$1f0dc3b9307be026$var$id","value","$1f0dc3b9307be026$var$send","$1f0dc3b9307be026$var$div","$1f0dc3b9307be026$var$API_URL","$1f0dc3b9307be026$var$CATEGORIES","$1f0dc3b9307be026$var$currentPage","$1f0dc3b9307be026$var$totalPages","$1f0dc3b9307be026$var$resultsGenre","async","$1f0dc3b9307be026$var$getDate","page","response","fetch","data","json","console","log","results","length","movies","indice","total_pages","li","i","innerHTML","movieCards","map","movie","idGenres","genre_ids","result","filter","filtro","includes","id","title","releaseYear","release_date","moviePoster","poster_path","genre","name","join","error","$1f0dc3b9307be026$var$updatePagination","getElementById","textContent","options","method","headers","accept","Authorization","err","then","genres","addEventListener","e","preventDefault"],"version":3,"file":"index.4d5e2d54.js.map"}