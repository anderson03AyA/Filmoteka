{"mappings":"AAAO,MCGDA,EAAcC,SAASC,cAAc,WAC3C,IAAIC,EAAKH,EAAYI,MACrB,MAAMC,EAAOJ,SAASC,cAAc,SAC9BI,EAAML,SAASC,cAAc,qBAI7BK,EAES,gBAFTA,EAIG,sCAKT,IAAIC,EAAc,EACdC,EAAa,EASjBC,eAAeC,EAAQC,GACrB,IACE,MAAMC,QAAiBC,MAAM,GAAGC,iBAAiBH,KAC3CI,QAAaH,EAASI,OAK3B,GAHDC,QAAQC,IAAIH,GAGRA,EAAKI,SAAWJ,EAAKI,QAAQC,OAAS,EAAG,CAE1C,MAAKC,EAASN,EAAKI,QAEpB,IAAIG,EAAS,EACb,MAAMC,EAAaF,EAAOG,KAAIC,IAC5B,MAAMC,EAAWX,EAAKI,QAAQG,GAAQK,UAEtC,IAAIC,EAASC,aAAaC,QAAOC,GAC/BL,EAASM,SAASD,EAAOE,MAE3BhB,QAAQC,IAAIU,GAEZ,MAAMM,EAAQT,EAAMS,MACdC,EAAcV,EAAMW,aACpBC,EAAc,kCAAsBZ,EAAMa,cAIhD,OAFAhB,IAEO,oHAGSY,4FAGAA,0FAPEN,EAAOJ,KAAIe,GAASA,EAAMC,+FAa5BL,sDAEDE,gDACGA,8GAGX,IAGThC,EAAIoC,UAAYlB,EAAWmB,KAAK,IAEhClC,EAAaO,EAAK4B,W,MAGjB1B,QAAOC,IAAI,4C,CAEd,MAAO0B,GACP3B,QAAQC,IAAI,wBAAyB0B,E,EAIzC,SAASC,IAEP7C,SAAS8C,eAAe,gBAAgBC,YAAcxC,EACtDP,SAAS8C,eAAe,eAAeC,YAAcvC,C,CD5F9BC,WACvB,MAAMuC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIN,IACE,MAAMxC,QAAiBC,MACrB,4DACAmC,GAIF,aADqBpC,EAASI,M,CAE9B,MAAOqC,GACPpC,QAAQ2B,MAAMS,E,GCIC,GACRC,MAAKnC,IACdU,aAAeV,EAAQoC,OACvBtC,QAAQC,IAAIW,aAAa,IAqE3BzB,EAAKoD,iBAAiB,SAAS/C,MAAMgD,IACnCA,EAAEC,iBACwB,KAAtB3D,EAAYI,MACdwD,OAAOC,QAAQ,kBAEf1D,EAAKH,EAAYI,MACjBW,QAAU,+BAA+BR,oDAAmDJ,IAAKI,IACjGC,EAAc,QACRG,EAAQH,GACdsC,I,IAIJ7C,SAAS8C,eAAe,aAAaU,iBAAiB,SAAS/C,UACzDF,EAAc,IAChBA,UACMG,EAAQH,GACdsC,I,IAGJ7C,SAAS8C,eAAe,aAAaU,iBAAiB,SAAS/C,UACzDF,EAAcC,IAChBD,UACMG,EAAQH,GACdsC,I","sources":["src/genres.js","src/index.js"],"sourcesContent":["export const getGenres = async () => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5YWFlYzdiNzAxNjQwOTQzNjk0ODU2NzRkYmE3NmY2MiIsInN1YiI6IjY0NTlhOWEyNzdkMjNiMDEzNjVkZDJlYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.KhcKUdwkddD7iZWM02lRSUXeaIlmMwnz5XvQav89l20',\n    },\n  };\n\n  try {\n    const response = await fetch(\n      'https://api.themoviedb.org/3/genre/movie/list?language=en',\n      options\n    );\n\n      const data = await response.json();\n    return data;\n  } catch (err) {\n    console.error(err);\n  }\n};\n","import { getGenres } from './genres';\n\n\nconst searchInput = document.querySelector('.search');\nlet id = searchInput.value;\nconst send = document.querySelector('.send');\nconst div = document.querySelector('.movies-container');\n\nconst API_KEY = '9aaec7b70164094369485674dba76f62';\n\nconst CATEGORIES = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  genre: '/genre/movie/list',\n  basic: '&language=en-US&include_adult=false',\n};\n\nconst baseImageUrl = 'https://image.tmdb.org/t/p/';\n\nlet currentPage = 1;\nlet totalPages = 1;\nconst resultsPerPage = 20;\n\nconst listGenres = getGenres();\nlistGenres.then(results => {\n  resultsGenre = results.genres;\n  console.log(resultsGenre);\n});\n\nasync function getDate(page) {\n  try {\n    const response = await fetch(`${API_URL} &page=${page}`);\n    const data = await response.json();\n\n    console.log(data);\n\n    // Verificar si se encontraron resultados de búsqueda\n    if (data.results && data.results.length > 0) {\n      // Obtener los resultados de la página actual\n      const movies = data.results;\n\n      let indice = 0;\n      const movieCards = movies.map(movie => {\n        const idGenres = data.results[indice].genre_ids;\n\n        let result = resultsGenre.filter(filtro =>\n          idGenres.includes(filtro.id)\n        );\n        console.log(result);\n\n        const title = movie.title;\n        const releaseYear = movie.release_date;\n        const moviePoster = `${baseImageUrl}w500${movie.poster_path}`;\n\n        indice++;\n        let resultGenre = result.map(genre => genre.name);\n        return `<div class=\"photo-card\">\n          <div class=\"info\">\n            <p class=\"info-item\">\n              <strong>${title}</strong>\n            </p>\n              <p class=\"info-item\">\n              <strong>${title}</strong>\n            </p>\n            <p class=\"info-item\">\n              <strong>${resultGenre}</strong>\n            </p>\n            <p class=\"info-item\">\n              <strong>${releaseYear}</strong>\n            </p>\n            <a href=\"${moviePoster}\" class=\"gallery\">\n              <img src=\"${moviePoster}\" alt=\"\" loading=\"lazy\" width=\"100px\" height=\"100px\" />\n            </a>\n          </div>\n        </div>`;\n      });\n\n      div.innerHTML = movieCards.join('');\n\n      totalPages = data.total_pages;\n    } else {\n      // No se encontraron resultados de búsqueda\n      console.log('No se encontraron resultados de búsqueda.');\n    }\n  } catch (error) {\n    console.log('Ha ocurrido un error:', error);\n  }\n}\n\nfunction updatePagination() {\n  // Actualizar estado de la paginación\n  document.getElementById('current-page').textContent = currentPage;\n  document.getElementById('total-pages').textContent = totalPages;\n}\n\nsend.addEventListener('click', async e => {\n  e.preventDefault();\n  if (searchInput.value === '') {\n    Notify.warning('input invalid');\n  } else {\n    id = searchInput.value;\n    API_URL = `https://api.themoviedb.org/3${CATEGORIES.querySearch}?api_key=${API_KEY}&query=${id}${CATEGORIES.basic}`;\n    currentPage = 1;\n    await getDate(currentPage);\n    updatePagination();\n  }\n});\n\ndocument.getElementById('prev-page').addEventListener('click', async () => {\n  if (currentPage > 1) {\n    currentPage--;\n    await getDate(currentPage);\n    updatePagination();\n  }\n});\ndocument.getElementById('next-page').addEventListener('click', async () => {\n  if (currentPage < totalPages) {\n    currentPage++;\n    await getDate(currentPage);\n    updatePagination();\n  }\n});\n"],"names":["$1f0dc3b9307be026$var$searchInput","document","querySelector","$1f0dc3b9307be026$var$id","value","$1f0dc3b9307be026$var$send","$1f0dc3b9307be026$var$div","$1f0dc3b9307be026$var$CATEGORIES","$1f0dc3b9307be026$var$currentPage","$1f0dc3b9307be026$var$totalPages","async","$1f0dc3b9307be026$var$getDate","page","response","fetch","API_URL","data","json","console","log","results","length","movies","indice","movieCards","map","movie","idGenres","genre_ids","result","resultsGenre","filter","filtro","includes","id","title","releaseYear","release_date","moviePoster","poster_path","genre","name","innerHTML","join","total_pages","error","$1f0dc3b9307be026$var$updatePagination","getElementById","textContent","options","method","headers","accept","Authorization","err","then","genres","addEventListener","e","preventDefault","Notify","warning"],"version":3,"file":"index.2d57bb56.js.map"}