{"mappings":"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","sources":["src/config.js","src/index.js","src/genres.js","src/pages.js","src/movieCard.js"],"sourcesContent":["export const API_KEY = '9aaec7b70164094369485674dba76f62';\n\nexport const API_URL = 'https://api.themoviedb.org/3';\n\nexport const CATEGORIES = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  genre: '/genre/movie/list',\n  basic: '&language=en-US&include_adult=false',\n};","import { API_KEY, API_URL, CATEGORIES } from './config';\nimport { getGenres } from './genres';\nimport { generatePages } from './pages';\nimport { MovieCard } from './movieCard';\n\nconst ulPages = document.querySelector('.pagination__page');\nconst searchInput = document.querySelector('.search');\nconst send = document.querySelector('.send');\nconst div = document.querySelector('.movies-container');\n\nlet currentPage = 1;\nlet totalPages = 1;\nlet resultsGenre = [];\n\nconst listGenres = getGenres();\nlistGenres.then(results => {\n  resultsGenre = results.genres;\n});\n\nasync function getMovies(page) {\n  const response = await fetch(`${API_URL}${CATEGORIES.querySearch}?api_key=${API_KEY}&query=${searchInput.value}${CATEGORIES.basic}&page=${page}`);\n  const data = await response.json();\n  return data;\n}\n\nfunction showMovies(data) {\n  if (data.results && data.results.length > 0) {\n    const movies = data.results;\n    totalPages = data.total_pages;\n    const li = generatePages(currentPage, totalPages);\n    ulPages.innerHTML = li;\n    const movieCards = movies.map((movie) => {\n      const idGenres = movie.genre_ids;\n      const genres = resultsGenre.filter((genre) =>\n        idGenres.includes(genre.id)\n      );\n      return MovieCard({\n        id: movie.id,\n        title: movie.title,\n        releaseYear: movie.release_date,\n        posterPath: movie.poster_path,\n        genres: genres,\n      });\n    });\n    div.innerHTML = movieCards.join('');\n    totalPages = data.total_pages;\n  } else {\n    console.log('No se encontraron resultados de búsqueda.');\n  }\n}\n\nasync function showMoviesByPage(page) {\n  const data = await getMovies(page);\n  showMovies(data);\n}\n\nsend.addEventListener('click', async e => {\n  e.preventDefault();\n  if (searchInput.value === '') {\n    return;\n  }\n  currentPage = 1;\n  await showMoviesByPage(currentPage);\n});\n\ndocument\n  .getElementById('pagination__prev-page')\n  .addEventListener('click', async () => {\n    if (currentPage > 1) {\n      currentPage--;\n      await showMoviesByPage(currentPage);\n    }\n  });\n\ndocument\n  .getElementById('pagination__next-page')\n  .addEventListener('click', async () => {\n    if (currentPage < totalPages) {\n      currentPage++;\n      await showMoviesByPage(currentPage);\n    }\n  });\n\n// Definir una función separada para manejar el evento de clic\nfunction handlePageClick(event) {\n  if (event.target.tagName === 'LI') {\n    const clickedValue = parseInt(event.target.innerText);\n    currentPage = clickedValue;\n    if (currentPage !== '...') {\n      event.stopPropagation();\n       showMoviesByPage(currentPage);\n    }\n  }\n}\n\nulPages.addEventListener('click', handlePageClick); // Agregar el evento de clic actualizado","import { API_KEY } from \"./config\";\nexport const getGenres = async () => {\n\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5YWFlYzdiNzAxNjQwOTQzNjk0ODU2NzRkYmE3NmY2MiIsInN1YiI6IjY0NTlhOWEyNzdkMjNiMDEzNjVkZDJlYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.KhcKUdwkddD7iZWM02lRSUXeaIlmMwnz5XvQav89l20',\n    },\n  };\n\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/genre/movie/list?language=en&api_key=${API_KEY}`,\n      options\n    );\n\n      const data = await response.json();\n    return data;\n  } catch (err) {\n    console.error(err);\n  }\n};\n"," \nfunction generatePages(currentPage, totalPages) {\n  let li = '';\n\n  const createListItem = (pageNumber, isCurrent = false) => {\n    const listItemClass = isCurrent ? 'currentPage' : '';\n    return `<li class=\"${listItemClass}\">${pageNumber}</li>`;\n  };\n\n  const createDots = () => '<li>...</li>';\n\n  if (totalPages < 10) {\n    for (let i = 1; i <= totalPages; i++) {\n      if (i === currentPage) {\n        li += createListItem(i, true);\n      } else {\n        li += createListItem(i);\n      }\n    }\n  } else {\n    if (currentPage > 4 && currentPage <= totalPages - 4) {\n      li += createListItem(1);\n      li += createDots();\n      li += createListItem(currentPage - 2);\n      li += createListItem(currentPage - 1);\n      li += createListItem(currentPage, true);\n      li += createListItem(currentPage + 1);\n      li += createListItem(currentPage + 2);\n      li += createDots();\n      li += createListItem(totalPages);\n    } else if (currentPage === 4) {\n      li += createListItem(currentPage - 3);\n      li += createListItem(currentPage - 2);\n      li += createListItem(currentPage - 1);\n      for (let i = currentPage; i < currentPage + 5; i++) {\n        if (i === currentPage) {\n          li += createListItem(i, true);\n        } else {\n          li += createListItem(i);\n        }\n      }\n      li += createDots();\n      li += createListItem(totalPages);\n    } else if (currentPage === 3) {\n      li += createListItem(currentPage - 2);\n      li += createListItem(currentPage - 1);\n      for (let i = currentPage; i < currentPage + 5; i++) {\n        if (i === currentPage) {\n          li += createListItem(i, true);\n        } else {\n          li += createListItem(i);\n        }\n      }\n      li += createDots();\n      li += createListItem(totalPages);\n    } else if (currentPage === 2) {\n      li += createListItem(currentPage - 1);\n      for (let i = currentPage; i < currentPage + 6; i++) {\n        if (i === currentPage) {\n          li += createListItem(i, true);\n        } else {\n          li += createListItem(i);\n        }\n      }\n      li += createDots();\n      li += createListItem(totalPages);\n    } else if (currentPage === 1) {\n      for (let i = currentPage; i < currentPage + 7; i++) {\n        if (i === currentPage) {\n          li += createListItem(i, true);\n        } else {\n          li += createListItem(i);\n        }\n      }\n      li += createDots();\n      li += createListItem(totalPages);\n    } else if (currentPage + 4 > totalPages) {\n      li += createListItem(1);\n      li += createDots();\n\n      if (currentPage === totalPages - 3) {\n        li += createListItem(currentPage - 3);\n        li += createListItem(currentPage - 2);\n        li += createListItem(currentPage - 1);\n        li += createListItem(currentPage, true);\n        for (let i = 1; i < 4; i++) {\n          li += createListItem(currentPage + i);\n        }\n      } else if (currentPage === totalPages - 2) {\n        li += createListItem(currentPage - 4);\n        li += createListItem(currentPage - 3);\n        li += createListItem(currentPage - 2);\n        li += createListItem(currentPage - 1);\n        li += createListItem(currentPage, true);\n\n        for (let i = 1; i < 3; i++) {\n          li += createListItem(currentPage + i);\n        }\n      } else if (currentPage === totalPages - 1) {\n        li += createListItem(currentPage - 5);\n        li += createListItem(currentPage - 4);\n        li += createListItem(currentPage - 3);\n        li += createListItem(currentPage - 2);\n        li += createListItem(currentPage - 1);\n        li += createListItem(currentPage, true);\n\n        for (let i = 1; i < 2; i++) {\n          li += createListItem(currentPage + i);\n        }\n      } else if (currentPage === totalPages) {\n        li += createListItem(currentPage - 6);\n        li += createListItem(currentPage - 5);\n        li += createListItem(currentPage - 4);\n        li += createListItem(currentPage - 3);\n        li += createListItem(currentPage - 2);\n        li += createListItem(currentPage - 1);\n        li += createListItem(currentPage, true);\n      }\n    }\n  }\n  return li;\n}\nexport { generatePages };\n","export function MovieCard({ title, releaseYear, posterPath, genres, id }) {\n    const baseImageUrl = 'https://image.tmdb.org/t/p/';\n    const moviePoster = `${baseImageUrl}w500${posterPath}`;\n    const genreNames = genres.map((genre) => genre.name).join(' | ');\n    return `\n      <div class=\"photo-card\">\n        <div class=\"info\">\n        <a onclick=\"openModal('${id}')\" class=\"info__poster\">\n            <img class=\"info__poster--img\" src=\"${moviePoster}\" alt=\"${title}\" loading=\"lazy\" width=\"100px\" height=\"100px\" id=\"info__poster--img\" />\n          </a>\n          <h3 class=\"info__title\">\n            <strong class=\"title\">${title}</strong>\n          </h3>\n          <p class=\"info__genre\">\n            ${genreNames} | ${releaseYear}\n          </p>\n          <p class=\"info-item\"></p>\n        </div>\n      </div>\n    `;\n}"],"names":["$3449b09e79cd57cb$export$a9861bd62f48e142","$3449b09e79cd57cb$export$923ea8233b386e99","$3449b09e79cd57cb$export$a513ea61a7bee91c","trending","querySearch","genre","basic","$4ukh0","parcelRequire","$1f0dc3b9307be026$var$ulPages","document","querySelector","$1f0dc3b9307be026$var$searchInput","$1f0dc3b9307be026$var$send","$1f0dc3b9307be026$var$div","$1f0dc3b9307be026$var$currentPage","$1f0dc3b9307be026$var$totalPages","$1f0dc3b9307be026$var$resultsGenre","async","$1f0dc3b9307be026$var$showMoviesByPage","page","data","response","fetch","API_URL","CATEGORIES","API_KEY","value","json","$1f0dc3b9307be026$var$getMovies","results","length","movies","total_pages","li","currentPage","totalPages","createListItem","pageNumber","isCurrent","i","innerHTML","movieCards","map","movie","idGenres","genre_ids","genres","filter","includes","id","title","releaseYear","posterPath","name","join","release_date","poster_path","console","log","$1f0dc3b9307be026$var$showMovies","options","method","headers","accept","Authorization","err","error","then","addEventListener","e","preventDefault","getElementById","event","target","tagName","clickedValue","parseInt","innerText","stopPropagation"],"version":3,"file":"index.c670c21f.js.map"}