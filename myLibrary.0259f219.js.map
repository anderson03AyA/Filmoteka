{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,uCAGMC,EAAaC,SAASC,eAAe,uBACrCC,EAAmBF,SAASC,eAAe,oBAC3CE,EAAUH,SAASI,cAAc,qBACnCC,EAAc,EAGhBN,EAASO,iBAAiB,SAE5B,WACE,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,iBAAmB,GAGjEC,EAAgBL,EAAYM,KAAI,SAAAC,GACpC,OAAOC,MACL,sCAAyDC,OAAnBF,EAAQ,aAAmBE,OAARC,EAAAC,QAAQ,iBACjEC,MAAK,SAAAC,G,OAAYA,EAASC,M,OAS9B,SAASC,EAAYC,GACnB,IAAIC,EAAa,GACjBC,QAAQC,IAAId,GACTO,MAAK,SAAAQ,GAEJ,IAAMC,EAAsBrB,EAAYsB,OAClCC,GAAK,EAAAC,EAAAC,eAAcT,EAZX,SAAAK,GAClB,OAAOA,GAAuB,GAAKK,KAAKC,KAAKN,EAAsB,IAAM,C,CAW/BO,CAAYP,IAClDzB,EAAQiC,UAAYN,EAMpB,IAJA,IACMO,EAA6B,IAAhBd,EAAoB,EADtB,IAC2BA,EAAc,GACpDe,EAAWL,KAAKM,IAFL,GAEShB,EAAwBI,EAAWE,QAEpDW,EAAIH,EAAYG,EAAIF,EAAUE,IAAK,CAC1C,IAAMC,EAAOd,EAAWa,GAElBE,EAAc,GAAsB1B,OADrB,8BACe,QAAsBA,OAAhByB,EAAKE,YACzCC,EAAaH,EAAKI,OAAOhC,KAAI,SAAAiC,G,OAASA,EAAMC,I,IAAMC,KAAK,OACvDC,EAAY,qHAI4BjC,OADfyB,EAAKS,GAAG,sFAC4BlC,OAArB0B,EAAY,WAG1B1B,OAHmCyB,EAAKU,MAAM,qLAMpEnC,OAHsByB,EAAKU,MAAM,iGAGjBnC,OAAhB4B,EAAW,OAAsB5B,OAAjByB,EAAKW,YAAY,2HAM3C5B,GAAcyB,C,CAGhB/C,EAAiBkC,UAAYZ,C,IAE9B6B,OAAM,SAAAC,G,OAASC,QAAQD,MAAMA,E,IAuCpC,SAASE,IACoBxD,SAASC,eAAe,gBAChCwD,UAAYpD,C,CAlF/BiB,EAAY,GAyDZnB,EAAQG,iBAAiB,SAbzB,SAAyBoD,GACvB,GAA6B,OAAzBA,EAAMC,OAAOC,QAAkB,CACjC,IAAMC,EAAeH,EAAMC,OAAOF,UAC5BK,EAAkBC,SAASF,GACZ,QAAjBA,IAEFxD,EAAcyD,EACdJ,EAAMM,kBACN1C,EAAYjB,G,KAQpBL,SACGC,eAAe,sBACfK,iBAAiB,QAAS2D,EAAApE,EAAA,CAAAoE,EAAAC,GAAAC,MAAA,SAAAC,I,uEACrB/D,EAAc,GAAC,C,sBACjBA,I,SACMiB,EAAYyC,SAAS1D,I,OAC3BmD,I,4CAINxD,SACGC,eAAe,sBACfK,iBAAiB,QAAS2D,EAAApE,EAAA,CAAAoE,EAAAC,GAAAC,MAAA,SAAAC,I,uEACrB/D,EA3FS,GA2Fe,C,sBAC1BA,I,SACMiB,EAAYyC,SAAS1D,I,OAC3BmD,EAAsBO,SAAS1D,I","sources":["src/watched.js"],"sourcesContent":["import { API_KEY } from './config';\nimport { generatePages } from './pagination';\n\nconst watchedBtn = document.getElementById('watched-movies--btn');\nconst watchedContainer = document.getElementById('movies-container');\nconst ulPages = document.querySelector('.pagination__page');\nlet currentPage = 1;\nlet totalPages = 1; // Variable para almacenar el número total de páginas\n\nwatchedBtn.addEventListener('click', renderWatchedMovies);\n\nfunction renderWatchedMovies() {\n  const watchedList = JSON.parse(localStorage.getItem('watchedList')) || [];\n  let moviesHTML = '';\n\n  const fetchPromises = watchedList.map(movieID => {\n    return fetch(\n      `https://api.themoviedb.org/3/movie/${movieID}?api_key=${API_KEY}&language=en`\n    ).then(response => response.json());\n  });\n\n  const total_pages = watchedMoviesLength => {\n    return watchedMoviesLength >= 20 ? Math.ceil(watchedMoviesLength / 20) : 1;\n  };\n\n  fetchMovies(1);\n\n  function fetchMovies(currentPage) {\n    let moviesHTML = '';\n    Promise.all(fetchPromises)\n      .then(moviesData => {\n        //get all for pagination---------------------\n        const watchedMoviesLength = watchedList.length;\n        const li = generatePages(currentPage, total_pages(watchedMoviesLength));\n        ulPages.innerHTML = li;\n\n        const pageSize = 20; // Tamaño de cada página\n        const startIndex = currentPage === 1 ? 0 : (currentPage - 1) * pageSize;\n        const endIndex = Math.min(currentPage * pageSize, moviesData.length);\n\n        for (let i = startIndex; i < endIndex; i++) {\n          const data = moviesData[i];\n          const baseImageUrl = 'https://image.tmdb.org/t/p/';\n          const moviePoster = `${baseImageUrl}w500${data.posterPath}`;\n          const genreNames = data.genres.map(genre => genre.name).join(' | ');\n          const movieHTML = `\n            <div class=\"photo-card\">\n              <div class=\"info\">\n                <a onclick=\"openModal('${data.id}')\" class=\"info__poster\">\n                  <img class=\"info__poster--img\" src=\"${moviePoster}\" alt=\"${data.title}\" loading=\"lazy\" width=\"100px\" height=\"100px\" id=\"info__poster--img\" />\n                </a>\n                <h3 class=\"info__title\">\n                  <strong class=\"title\">${data.title}</strong>\n                </h3>\n                <p class=\"info__genre\">\n                  ${genreNames} | ${data.releaseYear}\n                </p>\n                <p class=\"info-item\"></p>\n              </div>\n            </div>\n          `;\n          moviesHTML += movieHTML;\n        }\n\n        watchedContainer.innerHTML = moviesHTML;\n      })\n      .catch(error => console.error(error));\n  }\n\n  function handlePageClick(event) {\n    if (event.target.tagName === 'LI') {\n      const clickedValue = event.target.innerText;\n      const clickedValueInt = parseInt(clickedValue);\n      if (clickedValue === '...') {\n      } else {\n        currentPage = clickedValueInt;\n        event.stopPropagation();\n        fetchMovies(currentPage);\n      }\n    }\n  }\n\n  ulPages.addEventListener('click', handlePageClick); // Agregar el evento de clic actualizado\n\n\ndocument\n  .getElementById('library__prev-page')\n  .addEventListener('click', async () => {\n    if (currentPage > 1) {\n      currentPage--;\n      await fetchMovies(parseInt(currentPage));\n      updateCurrentPageText(currentPage);\n    }\n  });\n\ndocument\n  .getElementById('library__next-page')\n  .addEventListener('click', async () => {\n    if (currentPage < totalPages) {\n      currentPage++;\n      await fetchMovies(parseInt(currentPage));\n      updateCurrentPageText(parseInt(currentPage));\n    }\n  });\n\nfunction updateCurrentPageText() {\n  const currentPageElement = document.getElementById('current-page');\n  currentPageElement.innerText = currentPage;\n}\n\n}\n"],"names":["$bpxeT","parcelRequire","$6eff4d8afb430165$var$watchedBtn","document","getElementById","$6eff4d8afb430165$var$watchedContainer","$6eff4d8afb430165$var$ulPages","querySelector","$6eff4d8afb430165$var$currentPage","addEventListener","watchedList","JSON","parse","localStorage","getItem","fetchPromises","map","movieID","fetch","concat","$8lXr3","API_KEY","then","response","json","fetchMovies","currentPage1","moviesHTML","Promise","all","moviesData","watchedMoviesLength","length","li","$dLAzy","generatePages","Math","ceil","total_pages","innerHTML","startIndex","endIndex","min","i","data","moviePoster","posterPath","genreNames","genres","genre","name","join","movieHTML","id","title","releaseYear","catch","error","console","updateCurrentPageText","innerText","event","target","tagName","clickedValue","clickedValueInt","parseInt","stopPropagation","$parcel$interopDefault","$2TvXO","mark","_callee"],"version":3,"file":"myLibrary.0259f219.js.map"}